#!/usr/bin/perl -w

use strict;
use JSON;
use Time::HiRes qw (sleep);
use Data::Dumper;
use lib './lib';
use Minecraft::Automation;
use Minecraft::Screenshoter;

my $config = Minecraft::Automation::read_config();

sub get_cursor_position
{
    my $text = $_[0];
    Minecraft::Automation::say($text);
    my @tmp = split(/ /, `./get-mouse-position`);
    #print Dumper(@tmp);
    return {
                'x' => ($tmp[0]+0) > $config->{'system'}{'window'}{'geometry'}{'x'} ? ($tmp[0]+0) - $config->{'system'}{'window'}{'geometry'}{'x'} : $config->{'system'}{'window'}{'geometry'}{'x'} - ($tmp[0]+0),, 
                'y' => ($tmp[1]+0) > $config->{'system'}{'window'}{'geometry'}{'y'} ? ($tmp[1]+0) - $config->{'system'}{'window'}{'geometry'}{'y'} : $config->{'system'}{'window'}{'geometry'}{'y'} - ($tmp[1]+0)
            };
}

sub get_cell_coordinates
{
    my $text = $_[0];
    my $tmp = {};
    $tmp->{'tl'} = get_cursor_position("$text. Кликните в левом верхнем углу ячейки");
    $tmp->{'br'} = get_cursor_position("$text. Кликните в правом нижнем углу ячейки");
    $tmp->{'c'} = 
            {
                'x' => int($tmp->{'tl'}{'x'} + ($tmp->{'br'}{'x'} - $tmp->{'tl'}{'x'})/2),
                'y' => int($tmp->{'tl'}{'y'} + ($tmp->{'br'}{'y'} - $tmp->{'tl'}{'y'})/2)
            };
    return $tmp;
}

sub get_button_coordinates
{
    my $text = $_[0];
    my $tmp = {};
    $tmp->{'c'} = get_cursor_position("$text. Нажмите эту кнопку, старайтесь жать посередине кнопки");
    return $tmp;
}

sub get_windowsizeposition
{
    Minecraft::Automation::wait_any_key("Расположите окно майнкрафта так, как вам привычно и удобно");
    $config = Minecraft::Screenshoter::get_window_size_position();
}

sub get_crafttable_cells
{
    Minecraft::Automation::wait_any_key("Откройте интерфейс стола крафтинга");
    Minecraft::Automation::say("Нумерация ячеек следующая:\n0:0 1:0 2:0\n0:1 1:1 2:1\n0:2 1:2 2:2");
    for my $y (0..2)
    {
        for my $x (0..2)
        {
            $config->{'system'}{'crafttable'}{$x}{$y} = get_cell_coordinates("Ячейка $x:$y стола крафта");
        }
    }
    $config->{'system'}{'crafttable'}{'result'} = get_cell_coordinates("Ячейка результата стола крафта");
}

sub get_invertory_cells
{
    Minecraft::Automation::wait_any_key("Опять откройте интерфейс стола крафтинга, теперь будем выяснять где у нас инвертарь");
    Minecraft::Automation::say("Нумерация ячеек следующая:\n0:0 1:0 2:0 3:0 4:0 5:0 6:0 7:0 8:0\n0:1 1:1 2:0 3:1 4:0 5:1 6:1 7:1 8:1\n0:2 1:2 2:0 3:2 4:0 5:2 6:2 7:2 8:2\n0:3 1:3 2:0 3:3 4:0 5:3 6:3 7:3 8:3");
    for my $y (0..3)
    {
        for my $x (0..8)
        {
            $config->{'system'}{'invertory'}{$x}{$y} = get_cell_coordinates("Ячейка $x:$y инвертаря");
        }
    }
}

sub get_villager_interface
{
    Minecraft::Automation::wait_any_key("Откройте интерфейс торговли");
    $config->{'system'}{'villager'}{'next_page'} = get_button_coordinates("Кнопка переключения на следующую страницу торговли");
    $config->{'system'}{'villager'}{'prev_page'} = get_button_coordinates("Кнопка переключения на предыдущую страницу торговли");
    $config->{'system'}{'villager'}{'invertory'}{0} = get_cell_coordinates("Левая ячейка инвертаря крестьянина");
    $config->{'system'}{'villager'}{'invertory'}{1} = get_cell_coordinates("Правая ячейка инвертаря крестьянина");
    $config->{'system'}{'villager'}{'result'} = get_cell_coordinates("Ячейка результата торговли крестьянина (справа которая)");
    Minecraft::Screenshoter::take_screenshot("dont-delete-villager-result-empty", $config->{'system'}{'villager'}{'result'});
    Minecraft::Automation::wait_any_key("Теперь переключитесь на страницу торговли, где крестьянин еще может торговать (стрелки не перечеркнуты)");
    $config->{'system'}{'villager'}{'trade-avialable'} = get_cell_coordinates("Верхняя стрелка");
    Minecraft::Screenshoter::take_screenshot("dont-delete-villager-trade-avialable", $config->{'system'}{'villager'}{'trade-avialable'});
}

sub test_crafttable
{
    Minecraft::Automation::wait_any_key("Показываю ячейки стола крафта. Если вы правильно их отмечали, курсор будет приблизительно посередине каждой ячейки");
    for my $y (0..2)
    {
        for my $x (0..2)
        {
            Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'crafttable'}{$x}{$y});
            sleep(0.5);
        }
    }
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'crafttable'}{'result'});
    sleep(0.5);
}

sub test_invertory
{
    Minecraft::Automation::wait_any_key("Показываю ячейки инвертаря. Если вы правильно их отмечали, курсор будет приблизительно посередине каждой ячейки");
    for my $y (0..3)
    {
        for my $x (0..8)
        {
            Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'invertory'}{$x}{$y});
            sleep(0.5);
        }
    }
}

sub test_villager_interface
{
    Minecraft::Automation::wait_any_key("Показываю интерфейс торговли. Если вы правильно их отмечали, курсор будет приблизительно посередине каждой ячейки и верхней стрелки");
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'villager'}{'next_page'}); sleep(0.5);
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'villager'}{'prev_page'}); sleep(0.5);
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'villager'}{'invertory'}{0}); sleep(0.5);
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'villager'}{'invertory'}{1}); sleep(0.5);
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'villager'}{'result'}); sleep(0.5);
    Minecraft::Automation::mouse_move_to_cell($config->{'system'}{'villager'}{'trade-avialable'}); sleep(0.5);
}


Minecraft::Automation::say("Начинаем настройку. Следуйте рекомендациям тут.");
get_windowsizeposition();
Minecraft::Automation::say("Дальше надо будет кликать по углам ячеек. Правильное наведение на угол - это когда ячейка остается 'подсвеченой'. Старайтесь попадать в углы максимально точно. Удобнее будет, если инвертарь будет пуст");
get_crafttable_cells();
get_invertory_cells();
test_crafttable();
test_invertory();
Minecraft::Automation::wait_any_key("Теперь вам надо найти крестьянина. Станьте возле него. Проверьте, что у него доступно несколько товаров");
get_villager_interface();
test_villager_interface();
$config = Minecraft::Automation::save_system_config($config);            
#print Dumper($config);
